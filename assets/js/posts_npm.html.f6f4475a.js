"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3783],{6262:(e,i)=>{i.A=(e,i)=>{const s=e.__vccOpts||e;for(const[e,a]of i)s[e]=a;return s}},4728:(e,i,s)=>{s.r(i),s.d(i,{comp:()=>n,data:()=>r});var a=s(641);const t={},n=(0,s(6262).A)(t,[["render",function(e,i){return(0,a.uX)(),(0,a.CE)("div",null,i[0]||(i[0]=[(0,a.Fv)('<h1 id="使用阿里云-npm-镜像加速" tabindex="-1"><a class="header-anchor" href="#使用阿里云-npm-镜像加速"><span>使用阿里云 npm 镜像加速</span></a></h1><h2 id="_1-什么是-npm" tabindex="-1"><a class="header-anchor" href="#_1-什么是-npm"><span>1. 什么是 npm?</span></a></h2><p>npm（Node Package Manager）是随同 Node.js 一起安装的包管理工具，能够解决 Node.js 代码部署上的许多问题。常见的使用场景包括：</p><ul><li>允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。</li></ul><p>由于新版的 Node.js 已经集成了 npm，所以安装 Node.js 后，npm 也会一并安装。同样可以通过输入 <code>npm -v</code> 来测试是否成功安装，若显示版本号，则表示安装成功。</p><p>npm 可以理解为一个命令行工具，它的使命就是帮助你为项目自动安装所依赖的开发包。类似于 PHP 的依赖管理工具 Composer，Node.js 也有类似的包管理工具 npm。</p><p>默认的 npm 仓库地址是 <a href="http://registry.npmjs.org" target="_blank" rel="noopener noreferrer">http://registry.npmjs.org</a>。这是官方的仓库，其他仓库通常会定时同步官方仓库的内容。因此，切换到国内的镜像源可以显著提高下载速度，尤其是在网络较慢的情况下。</p><p>阿里云官方镜像站：<a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener noreferrer">https://developer.aliyun.com/mirror/</a></p><h2 id="_2-查看当前-npm-源地址设置-默认是官方镜像地址" tabindex="-1"><a class="header-anchor" href="#_2-查看当前-npm-源地址设置-默认是官方镜像地址"><span>2. 查看当前 npm 源地址设置（默认是官方镜像地址）</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://registry.npmjs.org/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-配置阿里巴巴镜像地址-推荐-速度快-稳定" tabindex="-1"><a class="header-anchor" href="#_3-配置阿里巴巴镜像地址-推荐-速度快-稳定"><span>3. 配置阿里巴巴镜像地址（推荐，速度快，稳定）</span></a></h2><p>阿里云的 npm 镜像地址是 <a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener noreferrer">https://developer.aliyun.com/mirror/</a>，具体的 npm 镜像地址为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>http://www.npmmirror.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你可以通过以下命令来配置 npm 使用阿里云镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmmirror.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意</strong>：原淘宝 npm 镜像地址 <code>http://registry.npm.taobao.org</code> 已经在 2022 年 6 月 30 日停止解析，新的地址是 <code>http://registry.npmmirror.com</code>。</p><h2 id="_4-恢复到官方源" tabindex="-1"><a class="header-anchor" href="#_4-恢复到官方源"><span>4. 恢复到官方源</span></a></h2><p>如果你需要解除镜像并恢复到官方源，可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://registry.npmjs.org</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',21)]))}]]),r=JSON.parse('{"path":"/posts/npm.html","title":"使用阿里云 npm 镜像加速","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-11-09T00:00:00.000Z","category":["教程推荐"],"tag":["npm"],"description":"使用阿里云 npm 镜像加速 1. 什么是 npm? npm（Node Package Manager）是随同 Node.js 一起安装的包管理工具，能够解决 Node.js 代码部署上的许多问题。常见的使用场景包括： 允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。 允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。 允...","head":[["meta",{"property":"og:url","content":"https://github.com/Mly66/blog/posts/npm.html"}],["meta",{"property":"og:site_name","content":"马瑶瑶瑶瑶瑶"}],["meta",{"property":"og:title","content":"使用阿里云 npm 镜像加速"}],["meta",{"property":"og:description","content":"使用阿里云 npm 镜像加速 1. 什么是 npm? npm（Node Package Manager）是随同 Node.js 一起安装的包管理工具，能够解决 Node.js 代码部署上的许多问题。常见的使用场景包括： 允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。 允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。 允..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-11T03:27:12.000Z"}],["meta",{"property":"article:tag","content":"npm"}],["meta",{"property":"article:published_time","content":"2024-11-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-11T03:27:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用阿里云 npm 镜像加速\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-11T03:27:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Mly\\",\\"url\\":\\"https://mly66.github.io/blog/\\"}]}"]]},"headers":[{"level":2,"title":"1. 什么是 npm?","slug":"_1-什么是-npm","link":"#_1-什么是-npm","children":[]},{"level":2,"title":"2. 查看当前 npm 源地址设置（默认是官方镜像地址）","slug":"_2-查看当前-npm-源地址设置-默认是官方镜像地址","link":"#_2-查看当前-npm-源地址设置-默认是官方镜像地址","children":[]},{"level":2,"title":"3. 配置阿里巴巴镜像地址（推荐，速度快，稳定）","slug":"_3-配置阿里巴巴镜像地址-推荐-速度快-稳定","link":"#_3-配置阿里巴巴镜像地址-推荐-速度快-稳定","children":[]},{"level":2,"title":"4. 恢复到官方源","slug":"_4-恢复到官方源","link":"#_4-恢复到官方源","children":[]}],"git":{"createdTime":1732465258000,"updatedTime":1741663632000,"contributors":[{"name":"Mly66","email":"3127328609@qq.com","commits":1}]},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"posts/npm.md","localizedDate":"2024年11月9日","excerpt":"\\n<h2>1. 什么是 npm?</h2>\\n<p>npm（Node Package Manager）是随同 Node.js 一起安装的包管理工具，能够解决 Node.js 代码部署上的许多问题。常见的使用场景包括：</p>\\n<ul>\\n<li>允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。</li>\\n<li>允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。</li>\\n<li>允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。</li>\\n</ul>\\n<p>由于新版的 Node.js 已经集成了 npm，所以安装 Node.js 后，npm 也会一并安装。同样可以通过输入 <code>npm -v</code> 来测试是否成功安装，若显示版本号，则表示安装成功。</p>","autoDesc":true}')}}]);